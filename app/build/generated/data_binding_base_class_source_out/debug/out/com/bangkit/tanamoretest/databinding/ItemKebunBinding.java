// Generated by view binder compiler. Do not edit!
package com.bangkit.tanamoretest.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bangkit.tanamoretest.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemKebunBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CardView cvItemNote;

  @NonNull
  public final ImageView imgDelete;

  @NonNull
  public final ImageView imgPhoto;

  @NonNull
  public final TextView tvItemDescription;

  @NonNull
  public final TextView tvItemTitle;

  private ItemKebunBinding(@NonNull CardView rootView, @NonNull CardView cvItemNote,
      @NonNull ImageView imgDelete, @NonNull ImageView imgPhoto,
      @NonNull TextView tvItemDescription, @NonNull TextView tvItemTitle) {
    this.rootView = rootView;
    this.cvItemNote = cvItemNote;
    this.imgDelete = imgDelete;
    this.imgPhoto = imgPhoto;
    this.tvItemDescription = tvItemDescription;
    this.tvItemTitle = tvItemTitle;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemKebunBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemKebunBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_kebun, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemKebunBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cv_item_note;
      CardView cvItemNote = ViewBindings.findChildViewById(rootView, id);
      if (cvItemNote == null) {
        break missingId;
      }

      id = R.id.img_delete;
      ImageView imgDelete = ViewBindings.findChildViewById(rootView, id);
      if (imgDelete == null) {
        break missingId;
      }

      id = R.id.img_photo;
      ImageView imgPhoto = ViewBindings.findChildViewById(rootView, id);
      if (imgPhoto == null) {
        break missingId;
      }

      id = R.id.tv_item_description;
      TextView tvItemDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvItemDescription == null) {
        break missingId;
      }

      id = R.id.tv_item_title;
      TextView tvItemTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvItemTitle == null) {
        break missingId;
      }

      return new ItemKebunBinding((CardView) rootView, cvItemNote, imgDelete, imgPhoto,
          tvItemDescription, tvItemTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
