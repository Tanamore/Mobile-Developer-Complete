// Generated by view binder compiler. Do not edit!
package com.bangkit.tanamoretest.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.ScrollView;
import android.widget.TextView;
import android.widget.TimePicker;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bangkit.tanamoretest.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddReminderBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnAddTask;

  @NonNull
  public final EditText etDatePicker;

  @NonNull
  public final EditText etTaskTitle;

  @NonNull
  public final ImageView ivBack;

  @NonNull
  public final ScrollView main;

  @NonNull
  public final RadioButton radioHarvest;

  @NonNull
  public final RadioButton radioWater;

  @NonNull
  public final RadioGroup reminderTypeGroup;

  @NonNull
  public final TimePicker timePicker;

  @NonNull
  public final TextView tvReminder;

  private ActivityAddReminderBinding(@NonNull ScrollView rootView, @NonNull Button btnAddTask,
      @NonNull EditText etDatePicker, @NonNull EditText etTaskTitle, @NonNull ImageView ivBack,
      @NonNull ScrollView main, @NonNull RadioButton radioHarvest, @NonNull RadioButton radioWater,
      @NonNull RadioGroup reminderTypeGroup, @NonNull TimePicker timePicker,
      @NonNull TextView tvReminder) {
    this.rootView = rootView;
    this.btnAddTask = btnAddTask;
    this.etDatePicker = etDatePicker;
    this.etTaskTitle = etTaskTitle;
    this.ivBack = ivBack;
    this.main = main;
    this.radioHarvest = radioHarvest;
    this.radioWater = radioWater;
    this.reminderTypeGroup = reminderTypeGroup;
    this.timePicker = timePicker;
    this.tvReminder = tvReminder;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddReminderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddReminderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_reminder, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddReminderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_add_task;
      Button btnAddTask = ViewBindings.findChildViewById(rootView, id);
      if (btnAddTask == null) {
        break missingId;
      }

      id = R.id.et_date_picker;
      EditText etDatePicker = ViewBindings.findChildViewById(rootView, id);
      if (etDatePicker == null) {
        break missingId;
      }

      id = R.id.et_task_title;
      EditText etTaskTitle = ViewBindings.findChildViewById(rootView, id);
      if (etTaskTitle == null) {
        break missingId;
      }

      id = R.id.iv_back;
      ImageView ivBack = ViewBindings.findChildViewById(rootView, id);
      if (ivBack == null) {
        break missingId;
      }

      ScrollView main = (ScrollView) rootView;

      id = R.id.radio_harvest;
      RadioButton radioHarvest = ViewBindings.findChildViewById(rootView, id);
      if (radioHarvest == null) {
        break missingId;
      }

      id = R.id.radio_water;
      RadioButton radioWater = ViewBindings.findChildViewById(rootView, id);
      if (radioWater == null) {
        break missingId;
      }

      id = R.id.reminder_type_group;
      RadioGroup reminderTypeGroup = ViewBindings.findChildViewById(rootView, id);
      if (reminderTypeGroup == null) {
        break missingId;
      }

      id = R.id.time_picker;
      TimePicker timePicker = ViewBindings.findChildViewById(rootView, id);
      if (timePicker == null) {
        break missingId;
      }

      id = R.id.tv_reminder;
      TextView tvReminder = ViewBindings.findChildViewById(rootView, id);
      if (tvReminder == null) {
        break missingId;
      }

      return new ActivityAddReminderBinding((ScrollView) rootView, btnAddTask, etDatePicker,
          etTaskTitle, ivBack, main, radioHarvest, radioWater, reminderTypeGroup, timePicker,
          tvReminder);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
